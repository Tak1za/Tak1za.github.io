{"version":3,"sources":["components/Header/Header.js","components/RepositoryDetails/RepositoryDetails.js","components/Repository/Repository.js","components/Projects/Projects.js","components/Home/Home.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","convertToHTML","data","converter","showdown","Converter","parse","makeHtml","RepositoryDetails","props","openDetails","handleCloseDetails","repo","Dialog","open","onClose","scroll","aria-labelledby","aria-describedby","PaperProps","style","backgroundColor","DialogTitle","id","title","Button","variant","size","target","href","url","endIcon","color","DialogContent","dividers","DialogContentText","tabIndex","desc","isStack","stack","DialogActions","tags","map","tag","Avatar","src","process","toLowerCase","alt","Repository","useState","setOpenDetails","onClick","toUpperCase","Projects","repositories","setRepositories","useEffect","fetch","then","res","json","length","Home","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48b9275f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <Link to=\"/projects\">MY PROJECTS</Link>\r\n      <Link to=\"/me\">ABOUT ME</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./RepositoryDetails.scss\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport showdown from \"showdown\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst convertToHTML = (data) => {\r\n  let converter = new showdown.Converter();\r\n  return parse(converter.makeHtml(data));\r\n};\r\n\r\nfunction RepositoryDetails(props) {\r\n  const { openDetails, handleCloseDetails, repo } = props;\r\n  return (\r\n    <Dialog\r\n      open={openDetails}\r\n      onClose={handleCloseDetails}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      PaperProps={{\r\n        style: {\r\n          backgroundColor: \"#444\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle id=\"scroll-dialog-title\">\r\n        <div>{repo.title}</div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          target=\"_blank\"\r\n          href={repo.url}\r\n          endIcon={<GitHubIcon />}\r\n          color=\"inherit\"\r\n        >\r\n          Github\r\n        </Button>\r\n      </DialogTitle>\r\n      <DialogContent dividers={true}>\r\n        <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n          <p>{convertToHTML(repo.data.desc)}</p>\r\n          {repo.isStack ? (\r\n            <>\r\n              <h3>Tech Stack</h3>\r\n              <p>{convertToHTML(repo.data.stack)}</p>\r\n            </>\r\n          ) : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions className=\"DialogActions\">\r\n        {repo.tags.map((tag) => {\r\n          return (\r\n            <Avatar\r\n              src={`${process.env.PUBLIC_URL}/assets/${tag.toLowerCase()}.svg`}\r\n              alt={tag}\r\n              className=\"Avatar\"\r\n            />\r\n          );\r\n        })}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default RepositoryDetails;\r\n","import React, { useState } from \"react\";\r\nimport \"./Repository.scss\";\r\nimport RepositoryDetails from \"../RepositoryDetails/RepositoryDetails\";\r\n\r\nfunction Repository(props) {\r\n  const { repo } = props;\r\n\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n\r\n  const handleOpenDetails = () => {\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setOpenDetails(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"RepositoryContainer\">\r\n      <div\r\n        className=\"Repository\"\r\n        onClick={handleOpenDetails}\r\n      >{`(${repo.title.toUpperCase()})`}</div>\r\n      <RepositoryDetails\r\n        openDetails={openDetails}\r\n        handleCloseDetails={handleCloseDetails}\r\n        repo={repo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repository;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Projects.scss\";\r\nimport Repository from \"../Repository/Repository\";\r\n\r\nfunction Projects() {\r\n  const getData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/data/repositories.json`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRepositories(data);\r\n      });\r\n  };\r\n\r\n  const [repositories, setRepositories] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Projects\">\r\n      {repositories &&\r\n        repositories.length > 0 &&\r\n        repositories.map((repo) => {\r\n          return <Repository repo={repo} className=\"Repository\" />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\n\r\nfunction Home() {\r\n  return <div>Test</div>;\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.scss\";\nimport Header from \"../Header/Header\";\nimport Projects from \"../Projects/Projects\";\nimport Home from \"../Home/Home\";\nimport { Redirect, Route, Switch } from \"react-router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/me\" />\n        </Route>\n        <Route path=\"/me\" component={Home} />\n        <Route path=\"/projects\" component={Projects} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}