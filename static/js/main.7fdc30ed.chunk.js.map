{"version":3,"sources":["components/Header/Header.js","components/RepositoryDetails/RepositoryDetails.js","components/Repository/Repository.js","components/Projects/Projects.js","components/Profile/Profile.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","convertToHTML","data","converter","showdown","Converter","parse","makeHtml","RepositoryDetails","props","openDetails","handleCloseDetails","repo","Dialog","open","onClose","scroll","aria-labelledby","aria-describedby","PaperProps","style","backgroundColor","DialogTitle","id","title","Button","variant","size","target","href","url","endIcon","color","DialogContent","dividers","DialogContentText","tabIndex","component","desc","isStack","stack","DialogActions","tags","map","tag","Avatar","src","process","toLowerCase","alt","Repository","useState","setOpenDetails","onClick","toUpperCase","Projects","repositories","setRepositories","useEffect","fetch","then","res","json","length","getExperienceContent","step","getExperienceTime","getExperienceRole","Profile","activeStep","setActiveStep","experience","expertise","handleSelectStep","index","Grid","container","direction","justify","alignItems","spacing","item","sm","md","height","width","Stepper","orientation","label","Step","StepLabel","StepContent","Chip","avatar","lg","wrap","Fab","aria-label","EmailRounded","WhatsApp","LinkedIn","Twitter","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fdc30ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <Link to=\"/projects\">MY PROJECTS</Link>\r\n      <Link to=\"/me\">ABOUT ME</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./RepositoryDetails.scss\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport showdown from \"showdown\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst convertToHTML = (data) => {\r\n  let converter = new showdown.Converter();\r\n  return parse(converter.makeHtml(data));\r\n};\r\n\r\nfunction RepositoryDetails(props) {\r\n  const { openDetails, handleCloseDetails, repo } = props;\r\n  return (\r\n    <Dialog\r\n      open={openDetails}\r\n      onClose={handleCloseDetails}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      PaperProps={{\r\n        style: {\r\n          backgroundColor: \"#444\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle id=\"scroll-dialog-title\">\r\n        <div>{repo.title}</div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          target=\"_blank\"\r\n          href={repo.url}\r\n          endIcon={\r\n            repo.title === \"Honeywell Forge\" ? <HomeIcon /> : <GitHubIcon />\r\n          }\r\n          color=\"inherit\"\r\n        >\r\n          {repo.title === \"Honeywell Forge\" ? \"Website\" : \"Github\"}\r\n        </Button>\r\n      </DialogTitle>\r\n      <DialogContent dividers={true}>\r\n        <DialogContentText\r\n          id=\"scroll-dialog-description\"\r\n          tabIndex={-1}\r\n          component=\"span\"\r\n        >\r\n          {convertToHTML(repo.data.desc)}\r\n          {repo.isStack ? (\r\n            <div>\r\n              <h3>Tech Stack</h3>\r\n              <div>{convertToHTML(repo.data.stack)}</div>\r\n            </div>\r\n          ) : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions className=\"DialogActions\">\r\n        {repo.tags.map((tag) => {\r\n          return (\r\n            <Avatar\r\n              key={tag}\r\n              src={`${process.env.PUBLIC_URL}/assets/${tag.toLowerCase()}.svg`}\r\n              alt={tag}\r\n              className=\"Avatar\"\r\n            />\r\n          );\r\n        })}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default RepositoryDetails;\r\n","import React, { useState } from \"react\";\r\nimport \"./Repository.scss\";\r\nimport RepositoryDetails from \"../RepositoryDetails/RepositoryDetails\";\r\n\r\nfunction Repository(props) {\r\n  const { repo } = props;\r\n\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n\r\n  const handleOpenDetails = () => {\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setOpenDetails(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"RepositoryContainer\">\r\n      <div\r\n        className=\"Repository\"\r\n        onClick={handleOpenDetails}\r\n      >{`(${repo.title.toUpperCase()})`}</div>\r\n      <RepositoryDetails\r\n        openDetails={openDetails}\r\n        handleCloseDetails={handleCloseDetails}\r\n        repo={repo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repository;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Projects.scss\";\r\nimport Repository from \"../Repository/Repository\";\r\n\r\nfunction Projects() {\r\n  const getData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/data/repositories.json`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRepositories(data);\r\n      });\r\n  };\r\n\r\n  const [repositories, setRepositories] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Projects\">\r\n      {repositories &&\r\n        repositories.length > 0 &&\r\n        repositories.map((repo) => {\r\n          return (\r\n            <Repository repo={repo} className=\"Repository\" key={repo.id} />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import {\r\n  Avatar,\r\n  Chip,\r\n  Fab,\r\n  Grid,\r\n  Step,\r\n  StepContent,\r\n  StepLabel,\r\n  Stepper,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Profile.scss\";\r\nimport showdown from \"showdown\";\r\nimport parse from \"html-react-parser\";\r\nimport { EmailRounded, LinkedIn, Twitter, WhatsApp } from \"@material-ui/icons\";\r\n\r\nfunction getExperience() {\r\n  return [\"Honeywell\", \"Honeywell\", \"Aricent Technologies\"];\r\n}\r\n\r\nfunction getExperienceContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `- Contributed on Honeywell Forge by working on technologies like **Neo4j** and **Elasticsearch**\\n- Leveraged **Redis** as a cache\\n- Trained colleagues on taking up **Go** and developed a vital component on the same\\n- Contributed heavily on increasing the performance of the APIs\\n- Gained experience on managing scrum teams by acting as a scrum lead`;\r\n    case 1:\r\n      return `- Created a POC to create an indoor navigation system using WiFi routers placed inside\\n- Created a POC for an extensible object model leveraging **Neo4j** and **Elasticsearch**\\n- Worked on **Open Policy Agent** to implement RBAC for internal offerings\\n- Participated in a Hackathon to create an automated Vehicle Management System, leading to a job offer`;\r\n    case 2:\r\n      return `- Created automation scripts to test the **SIP(session Initiation Protocol) Stack**\\n- Used **Selenium** and Excel macros to automate a manual ticket creation process\\n- Made myself familiar with **Linux**, partly working as a system admin`;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction getExperienceTime(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `July, 2019 - Present`;\r\n    case 1:\r\n      return `February, 2019 - June, 2019`;\r\n    case 2:\r\n      return `May, 2018 - June, 2018`;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction getExperienceRole(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `Software Engineer I`;\r\n    case 1:\r\n      return `Intern Bachelor`;\r\n    case 2:\r\n      return `Software Intern`;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction getExpertise() {\r\n  return [\r\n    \"Go\",\r\n    \"Dotnet\",\r\n    \"React\",\r\n    \"Linux\",\r\n    \"Javascript\",\r\n    \"Neo4j\",\r\n    \"Flutter\",\r\n    \"Firebase\",\r\n  ];\r\n}\r\n\r\nconst convertToHTML = (data) => {\r\n  let converter = new showdown.Converter();\r\n  return parse(converter.makeHtml(data));\r\n};\r\n\r\nfunction Profile() {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const experience = getExperience();\r\n  const expertise = getExpertise();\r\n\r\n  const handleSelectStep = (index) => {\r\n    setActiveStep(index);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n      spacing={1}\r\n    >\r\n      <Grid item sm={12} md={6}>\r\n        <Avatar\r\n          src={`${process.env.PUBLIC_URL}/assets/me.jpg`}\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        />\r\n        <div className=\"Details\">\r\n          <h2 className=\"Name\">Varun Gupta</h2>\r\n          <p className=\"DesignationAndEmail\">\r\n            Full Stack Developer | varungupta2015135@gmail.com | +91-9585426092\r\n          </p>\r\n          <div className=\"Location\">\r\n            <h3>Location</h3>\r\n            <p>Faridabad, Haryana</p>\r\n          </div>\r\n          <div className=\"About\">\r\n            <h3>About Me</h3>\r\n            <p>\r\n              I'm a software developer, with experience in managing agile scrum\r\n              teams as a scrum lead. I consider myself to be a 'forever student'\r\n              eager to build on my foundations in the field of software\r\n              development. I'm also a technology enthusiast and love\r\n              experimenting with new technologies be it software or hardware.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid item sm={12} md={6}>\r\n        <div className=\"Experience\">\r\n          <h3>Work Experience</h3>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n            {experience.map((label, index) => (\r\n              <Step key={index} onClick={() => handleSelectStep(index)}>\r\n                <StepLabel onClick={() => handleSelectStep(index)}>\r\n                  {label} | {getExperienceRole(index)} |{\" \"}\r\n                  {getExperienceTime(index)}\r\n                </StepLabel>\r\n                <StepContent>\r\n                  {convertToHTML(getExperienceContent(index))}\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </div>\r\n        <div className=\"Expertise\">\r\n          <h3>Areas of Expertise</h3>\r\n          <div className=\"ExpertiseChipsContainer\">\r\n            {expertise.map((label) => (\r\n              <Chip\r\n                key={label}\r\n                label={label === \"Dotnet\" ? \".NET\" : label}\r\n                style={{ color: \"black\" }}\r\n                avatar={\r\n                  <Avatar\r\n                    src={`${\r\n                      process.env.PUBLIC_URL\r\n                    }/assets/${label.toLowerCase()}.svg`}\r\n                    alt={label}\r\n                  />\r\n                }\r\n              ></Chip>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={12}\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        container\r\n        className=\"PostScript\"\r\n        wrap=\"wrap\"\r\n      >\r\n        Have a project idea or want to work with me?\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        container\r\n        className=\"PostScript\"\r\n        wrap=\"wrap\"\r\n      >\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"mail\"\r\n          size=\"small\"\r\n          href=\"mailto:varungupta2015135@gmail.com\"\r\n          target=\"_blank\"\r\n        >\r\n          <EmailRounded />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"mail\"\r\n          size=\"small\"\r\n          href=\"https://wa.me/919585426092\"\r\n          target=\"_blank\"\r\n        >\r\n          <WhatsApp />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"mail\"\r\n          size=\"small\"\r\n          href=\"https://www.linkedin.com/in/varun-gupta-894baa118/\"\r\n          target=\"_blank\"\r\n        >\r\n          <LinkedIn />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"mail\"\r\n          size=\"small\"\r\n          href=\"https://twitter.com/Tak1za\"\r\n          target=\"_blank\"\r\n        >\r\n          <Twitter />\r\n        </Fab>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import \"./App.scss\";\nimport Header from \"../Header/Header\";\nimport Projects from \"../Projects/Projects\";\nimport Profile from \"../Profile/Profile\";\nimport { Redirect, Route, Switch } from \"react-router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/me\" />\n        </Route>\n        <Route path=\"/me\" component={Profile} />\n        <Route path=\"/projects\" component={Projects} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}